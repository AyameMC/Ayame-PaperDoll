/*
 *     Highly configurable paper doll mod, well integrated with Ayame.
 *     Copyright (C) 2024  LucunJi(Original author), CrystalNeko, HappyRespawnanchor, pertaz(Icon Designer)
 *
 *     This file is part of PaperDoll Render.
 *
 *     PaperDoll Render is free software: you can redistribute it and/or modify
 *     it under the terms of the GNU Lesser General Public License as published by
 *     the Free Software Foundation, either version 3 of the License, or
 *     (at your option) any later version.
 *
 *     PaperDoll Render is distributed in the hope that it will be useful,
 *     but WITHOUT ANY WARRANTY; without even the implied warranty of
 *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *     GNU Lesser General Public License for more details.
 *
 *     You should have received a copy of the GNU Lesser General Public License
 *     along with PaperDoll Render.  If not, see <https://www.gnu.org/licenses/>.
 */

import groovy.json.JsonSlurper

plugins {
    id('fabric-loom').version('1.6-SNAPSHOT')
}

sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

ext.configFile = file "build.properties"

// follow semantic versioning! https://semver.org/
def modJson = file(sourceSets.main.resources.srcDirs.first().path + '/fabric.mod.json')
def modSpec = new JsonSlurper().parseText(modJson.text)
archivesBaseName = modSpec.name
version = project.minecraft_version + "-" + modSpec.version
group = project.maven_group + "." + modSpec.id

repositories {
    maven { url 'https://masa.dy.fi/maven' }
    maven { url 'https://api.modrinth.com/maven' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    // mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API is the dependency of modmenu
    modRuntimeOnly "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "maven.modrinth:modmenu:${project.mod_menu_version}"

    // jar-in-jar
    include(modApi(fabricApi.module("fabric-key-binding-api-v1", project.fabric_version)))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    // Minecraft 1.18 upwards uses Java 17. 1.20.5 upwards uses Java 21
    it.options.release = 21
}

java {
    withSourcesJar()
}

jar {
    from("COPYING") {
        rename { "${it}_${project.archivesBaseName}" }
    }
    from("COPYING.LESSER") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }
}

loom {
    accessWidenerPath = file("src/main/resources/paperdollrender.accesswidener")
}

//tasks.register('printToGitHubActions') {
//    onlyIf { System.getenv().GITHUB_OUTPUT }
//    doLast {
////        same as those in mc-publish
//        FileWriter fw = new FileWriter(System.getenv().GITHUB_OUTPUT)
//        fw.write("version=${project.version}\n")
//        fw.write("game_versions=${project.minecraft_version}\n")
//        fw.write("files=${remapJar.archiveFile.get().getAsFile().absolutePath}\n")
//        fw.write("release_name=${modSpec.name} v${modSpec.version} for mc ${project.minecraft_version}\n")
//        fw.close()
//    }
//}
//
//tasks.build.finalizedBy(printToGitHubActions)
